/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mazegui;

import java.util.HashSet;

/**
 *
 * @author Yassine
 */
public class NewJFrame extends javax.swing.JFrame {
    public int counter=0;
    public int bestscore=14;
    public String fortext;
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        right = new javax.swing.JButton();
        down = new javax.swing.JButton();
        left = new javax.swing.JButton();
        up = new javax.swing.JButton();
        m00 = new javax.swing.JLabel();
        m01 = new javax.swing.JLabel();
        m02 = new javax.swing.JLabel();
        m03 = new javax.swing.JLabel();
        m04 = new javax.swing.JLabel();
        m05 = new javax.swing.JLabel();
        m10 = new javax.swing.JLabel();
        m11 = new javax.swing.JLabel();
        m12 = new javax.swing.JLabel();
        m13 = new javax.swing.JLabel();
        m14 = new javax.swing.JLabel();
        m15 = new javax.swing.JLabel();
        m20 = new javax.swing.JLabel();
        m21 = new javax.swing.JLabel();
        m22 = new javax.swing.JLabel();
        m23 = new javax.swing.JLabel();
        m24 = new javax.swing.JLabel();
        m25 = new javax.swing.JLabel();
        m30 = new javax.swing.JLabel();
        m31 = new javax.swing.JLabel();
        m32 = new javax.swing.JLabel();
        m33 = new javax.swing.JLabel();
        m34 = new javax.swing.JLabel();
        m35 = new javax.swing.JLabel();
        m40 = new javax.swing.JLabel();
        m41 = new javax.swing.JLabel();
        m42 = new javax.swing.JLabel();
        m43 = new javax.swing.JLabel();
        m44 = new javax.swing.JLabel();
        m45 = new javax.swing.JLabel();
        m50 = new javax.swing.JLabel();
        m51 = new javax.swing.JLabel();
        m52 = new javax.swing.JLabel();
        m53 = new javax.swing.JLabel();
        m54 = new javax.swing.JLabel();
        m55 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        gameover = new javax.swing.JLabel();
        best = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        i = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Maze");
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setMinimumSize(new java.awt.Dimension(850, 640));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        right.setText("Right");
        right.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rightStateChanged(evt);
            }
        });
        right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightActionPerformed(evt);
            }
        });
        getContentPane().add(right, new org.netbeans.lib.awtextra.AbsoluteConstraints(752, 489, 58, 44));

        down.setText("Down");
        down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downActionPerformed(evt);
            }
        });
        getContentPane().add(down, new org.netbeans.lib.awtextra.AbsoluteConstraints(684, 489, 62, 44));

        left.setText("Left");
        left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftActionPerformed(evt);
            }
        });
        getContentPane().add(left, new org.netbeans.lib.awtextra.AbsoluteConstraints(621, 489, 57, 44));

        up.setText("Up");
        up.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                upMouseDragged(evt);
            }
        });
        up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upActionPerformed(evt);
            }
        });
        getContentPane().add(up, new org.netbeans.lib.awtextra.AbsoluteConstraints(684, 433, 62, 44));

        m00.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m00, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 61, 56));

        m01.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m01, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 61, 56));

        m02.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        m02.setText("X");
        getContentPane().add(m02, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 61, 56));

        m03.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m03, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 61, 56));

        m04.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m04, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 61, 56));

        m05.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m05, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, 61, 56));

        m10.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 61, 56));

        m11.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m11, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 61, 56));

        m12.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m12, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 61, 56));

        m13.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m13, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 61, 56));

        m14.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m14, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 61, 56));

        m15.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m15, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 120, 61, 56));

        m20.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 61, 56));

        m21.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m21, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 61, 56));

        m22.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m22, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, 61, 56));

        m23.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m23, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 61, 56));

        m24.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m24, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, 61, 56));

        m25.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m25, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, 61, 56));

        m30.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m30, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 61, 56));

        m31.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m31, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, 61, 56));

        m32.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m32, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 61, 56));

        m33.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m33, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 61, 56));

        m34.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m34, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, 61, 56));

        m35.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m35, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, 61, 260));

        m40.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m40, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 61, 56));

        m41.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m41, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, 61, 56));

        m42.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m42, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 400, 61, 56));

        m43.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m43, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 400, 61, 56));

        m44.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m44, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 400, 61, 56));

        m45.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m45, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 400, 61, 56));

        m50.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m50, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 61, 56));

        m51.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m51, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 480, 61, 56));

        m52.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m52, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, 61, 56));

        m53.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m53, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 480, 60, 56));

        m54.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m54, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 480, 61, 56));

        m55.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        getContentPane().add(m55, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 480, 61, 56));

        jLabel38.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel38.setIcon(new javax.swing.ImageIcon("C:\\Users\\Yassine\\Desktop\\bigmap2.JPG")); // NOI18N
        getContentPane().add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 567));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("       EXIT");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 550, 120, 50));

        jLabel2.setFont(new java.awt.Font("Sitka Display", 0, 36)); // NOI18N
        jLabel2.setText("Number of clicks ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, 280, 190));

        gameover.setFont(new java.awt.Font("Tekton Pro Cond", 0, 50)); // NOI18N
        gameover.setForeground(new java.awt.Color(255, 255, 0));
        gameover.setText("Game over ");
        getContentPane().add(gameover, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, 460, 80));

        best.setFont(new java.awt.Font("Sitka Text", 0, 48)); // NOI18N
        best.setForeground(new java.awt.Color(51, 51, 255));
        best.setText("Best score to finish level is : 14");
        getContentPane().add(best, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, -1));

        jLabel3.setFont(new java.awt.Font("Adobe Garamond Pro Bold", 0, 48)); // NOI18N
        jLabel3.setText("Your score is :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, -1, -1));

        score.setFont(new java.awt.Font("Adobe Heiti Std R", 0, 36)); // NOI18N
        getContentPane().add(score, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 320, 60, 60));

        i.setFont(new java.awt.Font("Curlz MT", 0, 48)); // NOI18N
        i.setForeground(new java.awt.Color(0, 153, 255));
        i.setText("0");
        getContentPane().add(i, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 130, 80, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void rightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightActionPerformed
                

            
               if(m00.getText().equals("X"))                   //configuration de button droit sur tout les labels 
                {                                                      //l button ma yekhdemch wa9t ykoun famma khat mabin label w label 
                    m00.setText("");                               // kima fel m01 ma ynejemch yet3ada lel m02 bel button droit khater famma khatt binethom 
                    m01.setText("X");                              // Nafs l principe bech yet3awed fi koll button 
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m02.getText().equals("X"))
                {
                    m02.setText("");
                    m03.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m03.getText().equals("X"))
                {
                    m03.setText("");
                    m04.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m04.getText().equals("X"))
                {
                    m04.setText("");
                    m05.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m11.getText().equals("X"))
                {
                    m11.setText("");
                    m12.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m13.getText().equals("X"))
                {
                    m13.setText("");
                    m14.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m14.getText().equals("X"))
                {
                    m14.setText("");
                    m15.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                } 
                else if(m21.getText().equals("X"))
                {
                    m21.setText("");
                    m22.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m22.getText().equals("X"))
                {
                    m22.setText("");
                    m23.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m23.getText().equals("X"))
                {
                    m23.setText("");
                    m24.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m24.getText().equals("X"))
                {
                    m24.setText("");
                    m25.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }

                else if(m31.getText().equals("X"))
                {
                    m31.setText("");
                    m32.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m32.getText().equals("X"))
                {
                    m32.setText("");
                    m33.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m33.getText().equals("X"))
                {
                    m33.setText("");
                    m34.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m40.getText().equals("X"))
                {
                    m40.setText("");
                    m41.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }

                 else if(m43.getText().equals("X"))
                {
                    m43.setText("");
                    m44.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m51.getText().equals("X"))
                {
                    m51.setText("");
                    m52.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m54.getText().equals("X"))
                {
                    m54.setText("");
                    m55.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
            
                if(m53.getText().equals("X"))
            {
                left.setVisible(false);
                right.setVisible(false);
                up.setVisible(false);
                down.setVisible(false);
                jLabel38.setVisible(false);
                
                jLabel1.setVisible(false);
                m53.setVisible(false);
                best.setVisible(true);
                i.setVisible(false);
                jLabel2.setVisible(false);
                score.setText(fortext);
                
            }
                else{best.setVisible(false);}
        // TODO add your handling code here: 
    }//GEN-LAST:event_rightActionPerformed

    private void rightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rightStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_rightStateChanged

    private void downActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downActionPerformed
        //column 1----------------------------------------------------------------------------------------------------------------------
               if(m00.getText().equals("X"))
                {
                    m00.setText("");
                    m10.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m10.getText().equals("X"))
                {
                    m10.setText("");
                    m20.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }

                 else if(m20.getText().equals("X"))
                {
                    m20.setText("");
                    m30.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m30.getText().equals("X"))
                {
                    m30.setText("");
                    m40.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m40.getText().equals("X"))
                {
                    m40.setText("");
                    m50.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
  //column 2----------------------------------------------------------------------------------------------------------------------
                else if(m01.getText().equals("X"))
                {
                    m01.setText("");
                    m11.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m11.getText().equals("X"))
                {
                    m11.setText("");
                    m21.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }

                 else if(m21.getText().equals("X"))
                {
                    m21.setText("");
                    m31.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }

                 else if(m41.getText().equals("X"))
                {
                    m41.setText("");
                    m51.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
//column 3----------------------------------------------------------------------------------------------------------------------
                else if(m02.getText().equals("X"))
                {
                    m02.setText("");
                    m12.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m42.getText().equals("X"))
                {
                    m42.setText("");
                    m52.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
//column 4----------------------------------------------------------------------------------------------------------------------
                else if(m43.getText().equals("X"))
                {
                    m43.setText("");
                    m53.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                //column 5----------------------------------------------------------------------------------------------------------------------
                  else if(m44.getText().equals("X"))
                {
                    m44.setText("");
                    m54.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
 //column 6----------------------------------------------------------------------------------------------------------------------
                
                else if(m05.getText().equals("X"))
                {
                    m05.setText("");
                    m15.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }  
                else if(m25.getText().equals("X"))
                {
                    m25.setText("");
                    m35.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }  
                 else if(m35.getText().equals("X"))
                {
                    m35.setText("");
                    m45.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
          
                  else if(m45.getText().equals("X"))
                {
                    m45.setText("");
                    m55.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                if(m53.getText().equals("X"))
            {
                left.setVisible(false);
                right.setVisible(false);
                up.setVisible(false);
                down.setVisible(false);
                jLabel38.setVisible(false);
                
                jLabel1.setVisible(false);
                m53.setVisible(false);
                best.setVisible(true);
                i.setVisible(false);
                jLabel2.setVisible(false);
                score.setText(fortext);
                
            }
                else{best.setVisible(false);}
        // TODO add your handling code here:
    }//GEN-LAST:event_downActionPerformed

    private void leftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftActionPerformed
                    if(m01.getText().equals("X"))                   
                {                                                      
                    m01.setText("");                                
                    m00.setText("X");                              
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m03.getText().equals("X"))
                {
                    m03.setText("");
                    m02.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m04.getText().equals("X"))
                {
                    m04.setText("");
                    m03.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m05.getText().equals("X"))
                {
                    m05.setText("");
                    m04.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m12.getText().equals("X"))
                {
                    m12.setText("");
                    m11.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m14.getText().equals("X"))
                {
                    m14.setText("");
                    m13.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m15.getText().equals("X"))
                {
                    m15.setText("");
                    m14.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                } 
                else if(m22.getText().equals("X"))
                {
                    m22.setText("");
                    m21.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m23.getText().equals("X"))
                {
                    m23.setText("");
                    m22.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m24.getText().equals("X"))
                {
                    m24.setText("");
                    m25.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m25.getText().equals("X"))
                {
                    m25.setText("");
                    m24.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }

                else if(m32.getText().equals("X"))
                {
                    m32.setText("");
                    m31.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m33.getText().equals("X"))
                {
                    m33.setText("");
                    m32.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m34.getText().equals("X"))
                {
                    m34.setText("");
                    m33.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m41.getText().equals("X"))
                {
                    m41.setText("");
                    m40.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }

                 else if(m44.getText().equals("X"))
                {
                    m44.setText("");
                    m43.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m52.getText().equals("X"))
                {
                    m52.setText("");
                    m51.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m55.getText().equals("X"))
                {
                    m55.setText("");
                    m54.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                if(m53.getText().equals("X"))
            {
                left.setVisible(false);
                right.setVisible(false);
                up.setVisible(false);
                down.setVisible(false);
                jLabel38.setVisible(false);
                
                jLabel1.setVisible(false);
                m53.setVisible(false);
                best.setVisible(true);
                i.setVisible(false);
                jLabel2.setVisible(false);
                score.setText(fortext);
                
            }
                else{best.setVisible(false);}

// TODO add your handling code here:
    }//GEN-LAST:event_leftActionPerformed

    private void upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upActionPerformed
        //comlumn 1------------------------------------------------------------------------------------------------------------------------------------                   
        if(m50.getText().equals("X"))
                {
                    m50.setText("");
                    m40.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m40.getText().equals("X"))
                {
                    m40.setText("");
                    m30.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }

                 else if(m30.getText().equals("X"))
                {
                    m30.setText("");
                    m20.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m20.getText().equals("X"))
                {
                    m20.setText("");
                    m10.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                 else if(m10.getText().equals("X"))
                {
                    m10.setText("");
                    m00.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
            //column 2----------------------------------------------------------------------------------------------------------------------
                else if(m51.getText().equals("X"))
                {
                    m51.setText("");
                    m41.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m31.getText().equals("X"))
                {
                    m31.setText("");
                    m21.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }

                 else if(m21.getText().equals("X"))
                {
                    m21.setText("");
                    m11.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }

                 else if(m11.getText().equals("X"))
                {
                    m11.setText("");
                    m01.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                } 
                //column 3----------------------------------------------------------------------------------------------------------------------
                else if(m52.getText().equals("X"))
                {
                    m52.setText("");
                    m42.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                else if(m12.getText().equals("X"))
                {
                    m12.setText("");
                    m02.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
        //column 4----------------------------------------------------------------------------------------------------------------------
                        else if(m53.getText().equals("X"))
                {
                    m53.setText("");
                    m43.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                //column 5----------------------------------------------------------------------------------------------------------------------
                        else if(m54.getText().equals("X"))
                {
                    m54.setText("");
                    m44.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
         //column 6----------------------------------------------------------------------------------------------------------------------
                
                else if(m15.getText().equals("X"))
                {
                    m15.setText("");
                    m05.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }  
                else if(m35.getText().equals("X"))
                {
                    m35.setText("");
                    m25.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }  
                 else if(m45.getText().equals("X"))
                {
                    m45.setText("");
                    m35.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
          
                  else if(m55.getText().equals("X"))
                {
                    m55.setText("");
                    m45.setText("X");
                    counter++;
                    fortext=Integer.toString(counter);
                    i.setText(fortext);
                }
                if(m53.getText().equals("X"))
            {
                left.setVisible(false);
                right.setVisible(false);
                up.setVisible(false);
                down.setVisible(false);
                jLabel38.setVisible(false);
                
                jLabel1.setVisible(false);
                m53.setVisible(false);
                best.setVisible(true);
                i.setVisible(false);
                jLabel2.setVisible(false);
                score.setText(fortext);
                
            }
                else{best.setVisible(false);}
// TODO add your handling code here:
    }//GEN-LAST:event_upActionPerformed

    private void upMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upMouseDragged
                
                // TODO add your handling code here:
    }//GEN-LAST:event_upMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() { 
            
            public void run() {
                new NewJFrame().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel best;
    private javax.swing.JButton down;
    private javax.swing.JLabel gameover;
    private javax.swing.JLabel i;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JButton left;
    private javax.swing.JLabel m00;
    private javax.swing.JLabel m01;
    private javax.swing.JLabel m02;
    private javax.swing.JLabel m03;
    private javax.swing.JLabel m04;
    private javax.swing.JLabel m05;
    private javax.swing.JLabel m10;
    private javax.swing.JLabel m11;
    private javax.swing.JLabel m12;
    private javax.swing.JLabel m13;
    private javax.swing.JLabel m14;
    private javax.swing.JLabel m15;
    private javax.swing.JLabel m20;
    private javax.swing.JLabel m21;
    private javax.swing.JLabel m22;
    private javax.swing.JLabel m23;
    private javax.swing.JLabel m24;
    private javax.swing.JLabel m25;
    private javax.swing.JLabel m30;
    private javax.swing.JLabel m31;
    private javax.swing.JLabel m32;
    private javax.swing.JLabel m33;
    private javax.swing.JLabel m34;
    private javax.swing.JLabel m35;
    private javax.swing.JLabel m40;
    private javax.swing.JLabel m41;
    private javax.swing.JLabel m42;
    private javax.swing.JLabel m43;
    private javax.swing.JLabel m44;
    private javax.swing.JLabel m45;
    private javax.swing.JLabel m50;
    private javax.swing.JLabel m51;
    private javax.swing.JLabel m52;
    private javax.swing.JLabel m53;
    private javax.swing.JLabel m54;
    private javax.swing.JLabel m55;
    private javax.swing.JButton right;
    private javax.swing.JLabel score;
    private javax.swing.JButton up;
    // End of variables declaration//GEN-END:variables
}
